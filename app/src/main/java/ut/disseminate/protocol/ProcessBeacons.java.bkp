package protocol;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.util.concurrent.LinkedBlockingQueue;

import mobile.MobileHost;
import ut.beacondisseminationapp.common.Beacon;
import ut.beacondisseminationapp.common.Chunk;
import ut.beacondisseminationapp.common.Utility;

public class ProcessPacket implements Runnable {
	
	// Thread for processing beacons
	
	public ProcessBeacons() {
	}
	
	public void run() {
		try {
			while (!Thread.interrupted()) {
				DatagramPacket pack = MobileHost.beaconQueue.take();
				MobileHost.processBeacon(pack);
				
				//TODO: process the beacon
			}
		} catch (InterruptedException e) {
			System.out.println("ReceiverChunks Thread was interrupted.");
		}
	}
	
}
